version: '3'

services:
 
  core-api:
    build: ./services/core
    container_name: core-api
    command: ./entrypoint.sh
    volumes:
      - ./services/core:/core_app
    ports:
      - "8000:8000"
    environment:
      - DJANGO_DB_HOST=core_db
      - DJANGO_DB_NAME=core_db
      - DJANGO_DB_USER=postgres
      - DJANGO_DB_PASSWORD=postgres
    depends_on:
      core_db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  core-consumer:
    build: ./services/core
    container_name: core-consumer
    command: python manage.py run_consumer
    volumes:
      - ./services/core:/core_app
    environment:
      - DJANGO_DB_HOST=core_db
      - DJANGO_DB_NAME=core_db
      - DJANGO_DB_USER=postgres
      - DJANGO_DB_PASSWORD=postgres
    depends_on:
      core_db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  admin-api:
    build: ./services/admin
    container_name: admin-api
    restart: on-failure
    command: ./entrypoint.sh
    volumes:
      - ./services/admin:/admin_app
    ports:
      - "8001:8001"
    depends_on:
      admin_db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  
  core_db:
    image: postgres
    container_name: core_db
    environment:
      POSTGRES_DB: core_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_core:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  admin_db:
    image: postgres
    container_name:  admin_db
    environment:
      POSTGRES_DB: admin_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_admin:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672" 
    healthcheck:
        test: [ "CMD", "rabbitmqctl", "status"]
        interval: 5s
        timeout: 20s
        retries: 5


volumes:
  postgres_data_core:
  postgres_data_admin:
  
    